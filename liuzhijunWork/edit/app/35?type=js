function G(id){ 
  return document.getElementById(id);
}
if(!HTMLElement.prototype.appendHTML){
  HTMLElement.prototype.appendHTML = function(html) {
    var fragment = GetHTMLFragment(html);
    this.appendChild(fragment);
    fragment = null;
  }
}
if(!HTMLElement.prototype.insertBeforeHTML){
  HTMLElement.prototype.insertBeforeHTML = function(html,existingElement) {
    var fragment = GetHTMLFragment(html);
    this.insertBefore(fragment,existingElement)
    fragment = null;
  }
}
if(!HTMLElement.prototype.insertAfterHTML){
  HTMLElement.prototype.insertAfterHTML = function(html,existingElement) {
    var el = existingElement.nextElementSibling;
    if(el) this.insertBeforeHTML(html,el);
    else this.appendHTML(html);
  }
}

function GetHTMLFragment(html){ 
  var divTemp = document.createElement("div"), 
      nodes = null,
      fragment = document.createDocumentFragment();

  divTemp.innerHTML = html;
  nodes = divTemp.childNodes;
  for (var i=0, length=nodes.length; i<length; i+=1) {
    fragment.appendChild(nodes[i].cloneNode(true));
  }
  return fragment;	
}

function template(tempStr,dataParam){
  var apiFun = [
    function attr(name,value){
      return value?[' ',name,'="',value,'"',' '].join(''):''; 
    }
  ];
  var html = apiFun+' var html="";';
  tempStr.split(/(<%.+?%>)/).map(function(item){
    if(!item) return;
    var r = /^<%(=?.*)%>$/.exec(item);
    var value = '';
    if(r && r.length){
      value = r[1]; 
      if(value[0]=='=') html+=' html+'+value+';';
      else html+=value;
    }
    else{
      value = item.replace(/[\n\t]/g,'');
      if(value!=='') html+=" html+='"+value+"';";
    }
  });
  html+=" return html;";
  var fun = new Function(dataParam || "data",html);
  return fun;
}

function compiled(tempStr,data){
  var fun = this.template(tempStr);
  return fun(data);
}

function applyTemplate(data,templateId,el,needEmpty){ 
  var scriptTemplate = G(templateId).innerHTML,
      compiled = this.template(scriptTemplate),
      html = compiled(data);
  needEmpty && (el.innerHTML = '');
  el.appendHTML(html);
}

function applyInsertAfterTemplate(data,templateId,el,existingElement){ 
  var scriptTemplate = G(templateId).innerHTML,
      compiled = this.template(scriptTemplate),
      html = compiled(data);
  el.insertAfterHTML(html,existingElement);
}

function ajax(opt){
	return new Promise(function(resolve,reject){
		var isPost = opt.type.toLowerCase()==='post';
			opt.data._=+new Date;
		var paramStr = ''; for(var key in opt.data) paramStr=[paramStr,'&',key,'=',opt.data[key]].join('');
		var xhr = new XMLHttpRequest();
		xhr.onload=()=>xhr.status===200 && resolve(JSON.parse(xhr.responseText));
		xhr.onerror=()=>reject(xhr.responseText);
		if(isPost){
			xhr.open(opt.type,opt.url);
			xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
			xhr.send(paramStr.replace(/^./,''));
		}
		else {
			opt.url = opt.url.indexOf('?')>0?opt.url+paramStr:opt.url+paramStr.replace(/^./,'?');
			xhr.open(opt.type,opt.url);
			xhr.send(null);
		}
	});
}